
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПрочитатьНастройки();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура DSNПриИзменении(Элемент)
	
	ДлинаСтрокиПротокола = СтрНайти(DSN, "//") + 2;
	
	SecurityToken = Сред(DSN, ДлинаСтрокиПротокола, СтрНайти(DSN, "@") - ДлинаСтрокиПротокола);
	ProjectID = Сред(DSN, СтрНайти(DSN, "/", НаправлениеПоиска.СКонца) + 1);
	Server = Сред(DSN, ДлинаСтрокиПротокола, СтрНайти(Сред(DSN, ДлинаСтрокиПротокола), "/") - 1);
	Если Не ЗначениеЗаполнено(ДатаВыгрузки) Тогда
		ДатаВыгрузки = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьЗакрыть(Команда)
	ЗаписатьНаКлиенте(Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	ЗаписатьНаКлиенте(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроверитьНастройки(Команда)
	
	Если Модифицированность Тогда
		Сообщить(НСтр("ru = 'Настройки не сохранены.'"));
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		
		ЭмуляцияОшибкиНаСервере();
		
		Элементы.ФормаКомандаПроверитьНастройки.Пометка = Истина;
		ПодключитьОбработчикОжидания("ПроверитьНастройки", 1, Истина);
		Сообщить(НСтр("ru = 'Проверка начнется через 1 секунду.'"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЭмуляцияОшибкиНаСервере()

	Попытка
		ВызватьИсключение НСтр("ru = 'Проверка настроек интеграции с сервером Sentry.'");
	Исключение
		ЗаписьЖурналаРегистрации(
		ИнтеграцияSentry.ИмяСобытияЖурналаРегистрации(), 
		УровеньЖурналаРегистрации.Ошибка, 
		Метаданные.Константы.НастройкиИнтеграцииSentry, 
		, 
		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиенте(Закрыть = Ложь)

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНаСервере(Закрыть);
	
	Если Закрыть Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере(Закрыть)
	
	ЗначенияНастроек = Новый Структура;
	ЗначенияНастроек.Вставить("DSN", DSN);
	ЗначенияНастроек.Вставить("ProjectID", ProjectID);
	ЗначенияНастроек.Вставить("SecurityToken", SecurityToken);
	ЗначенияНастроек.Вставить("SentryVersion", SentryVersion);
	ЗначенияНастроек.Вставить("Server", Server);
	ЗначенияНастроек.Вставить("ДатаВыгрузки", ДатаВыгрузки);
	
	ЗначениеКонстанты = Новый ХранилищеЗначения(ЗначенияНастроек);
	
	Константы.НастройкиИнтеграцииSentry.Установить(ЗначениеКонстанты);
	
	Модифицированность = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНастройки() Экспорт 
	
	Если ПроверитьНастройкиНаСервере() Тогда
		Сообщить(НСтр("ru = 'Успешно.'"));
	Иначе
		Сообщить(НСтр("ru = 'Ошибка, подробности смотрите в журнале регистрации.'"));
		ПрочитатьНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНастройкиНаСервере()
			
	Элементы.ФормаКомандаПроверитьНастройки.Пометка = Ложь;
		
	Возврат ИнтеграцияSentry.ВыгрузитьЖурналРегистрацииВSentry();
	
КонецФункции

&НаСервере
Процедура ПрочитатьНастройки()

	ЗначениеКонстанты = Константы.НастройкиИнтеграцииSentry.Получить();
	ЗначенияНастроек = ЗначениеКонстанты.Получить();
	
	Если ЗначениеЗаполнено(ЗначенияНастроек) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияНастроек);	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти